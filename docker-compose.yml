services:
  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=http://backend:8000/api
    networks:
      - restaurantos-network

  # Backend (Django)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/venv
    depends_on:
      - postgres
    environment:
      - DEBUG=True
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/restaurantos
      - ALLOWED_HOSTS=localhost,127.0.0.1
    command: >
      sh -c "python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    networks:
      - restaurantos-network

  # Database
  postgres:
    image: postgres:13
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=restaurant_db
    networks:
      - restaurantos-network

  # Redis for caching and as message broker
  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    networks:
      - restaurantos-network

  # Nginx for serving static files and as reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    restart: always
    networks:
      - restaurantos-network

networks:
  restaurantos-network:
    driver: bridge

volumes:
  postgres_data:
